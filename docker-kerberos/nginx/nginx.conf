user root;
error_log /var/log/nginx/dbg debug;
events {}
http {
    server {
      # for production enable ssl, authentication without ssl is not safe at all.
      #listen 443 ssl;
      #ssl_certificate /shared/example.crt;
      #ssl_certificate_key /shared/example.key;
        server_name docker-kerberos_ngserv_1.docker-kerberos_default;
        location /private/ {  #This just demonstrates mod-auth-request, it is not necessery as you can see in /
		            
            auth_request     /auth;
            auth_request_set $auth_status $upstream_status;
            auth_request_set $auth_user $upstream_http_x_remote_user;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Authorized-User $auth_user;            
            
            proxy_pass http://flask:5000/;  # This ought to be real application server
        }
        
        location /authsrv/ {  # This is implementation of authentication server using nginx, it only works on one host
            auth_gss on;
            auth_gss_allow_basic_fallback off;
            auth_gss_realm EXAMPLE.COM;
            auth_gss_keytab /shared/krb5.keytab;
            auth_gss_service_name HTTP/docker-kerberos_ngserv_1.docker-kerberos_default;
        
            add_header X-Remote-User $remote_user;                        
            proxy_pass http://127.0.0.1/true;                                
        }
        location /true {
            return 200;
        }
        location /auth {
            internal;
            proxy_pass              http://127.0.0.1/authsrv/;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
        }
         location / {  # This location requires authentication too
	    root /data/www;
            index index.html;
            auth_gss on;
            auth_gss_allow_basic_fallback off;
            auth_gss_realm EXAMPLE.COM;
            auth_gss_keytab /shared/krb5.keytab;
            auth_gss_service_name HTTP/docker-kerberos_ngserv_1.docker-kerberos_default;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Authorized-User $remote_user;
            
         }
    }
}